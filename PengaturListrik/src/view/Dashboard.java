/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JPanel;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author RivaSyafri
 */
public class Dashboard extends javax.swing.JFrame {

    private final Controller controller;
    
    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        controller = new Controller("COM4");
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        if (controller.getCurrentStatus()) {
            switchButton.setText("READ ON");
        } else {
            switchButton.setText("READ OFF");
        }
        if (controller.getBuzzerStatus()) {
            buzzerButton.setText("BUZZER ON");
        } else {
            buzzerButton.setText("BUZZER OFF");
        }
        chartPanel.add(new LineChart(controller.generateChart()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chartPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        switchButton = new javax.swing.JButton();
        timeLimitButton = new javax.swing.JButton();
        energyLimitButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        buzzerButton = new javax.swing.JButton();
        timeLimit = new javax.swing.JSpinner();
        energyLimit = new javax.swing.JSpinner();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitButtonMenu = new javax.swing.JMenuItem();
        actionMenu = new javax.swing.JMenu();
        switchButtonMenu = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chartPanel.setPreferredSize(new java.awt.Dimension(438, 150));

        javax.swing.GroupLayout chartPanelLayout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 408, Short.MAX_VALUE)
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );

        getContentPane().add(chartPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 408, 379));

        controlPanel.setBackground(new java.awt.Color(0, 0, 0, 200));
        controlPanel.setPreferredSize(new java.awt.Dimension(150, 150));
        controlPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        switchButton.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        switchButton.setText("SWITCH");
        switchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchButtonActionPerformed(evt);
            }
        });
        controlPanel.add(switchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 11, -1, 40));

        timeLimitButton.setText("Set Time Limit");
        timeLimitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeLimitButtonActionPerformed(evt);
            }
        });
        controlPanel.add(timeLimitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 143, 119, -1));

        energyLimitButton.setText("Set Energy Limit");
        energyLimitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                energyLimitButtonActionPerformed(evt);
            }
        });
        controlPanel.add(energyLimitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 251, 119, -1));

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        controlPanel.add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 332, 119, -1));

        buzzerButton.setText("Buzzer Switch");
        buzzerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buzzerButtonActionPerformed(evt);
            }
        });
        controlPanel.add(buzzerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 56, 119, -1));
        controlPanel.add(timeLimit, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 117, 119, -1));
        controlPanel.add(energyLimit, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 225, 119, -1));

        getContentPane().add(controlPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 180, 379));

        fileMenu.setText("File");
        fileMenu.add(jSeparator1);

        exitButtonMenu.setText("Exit");
        exitButtonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exitButtonMenu);

        jMenuBar1.add(fileMenu);

        actionMenu.setText("Action");

        switchButtonMenu.setText("Switch");
        switchButtonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchButtonMenuActionPerformed(evt);
            }
        });
        actionMenu.add(switchButtonMenu);
        actionMenu.add(jSeparator2);

        jMenuBar1.add(actionMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonMenuActionPerformed
        exit();
    }//GEN-LAST:event_exitButtonMenuActionPerformed

    private void switchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchButtonActionPerformed
        controller.switchCurrentStatus();
        if (controller.getCurrentStatus()) {
            switchButton.setText("READ ON");
        } else {
            switchButton.setText("READ OFF");
        }
    }//GEN-LAST:event_switchButtonActionPerformed

    private void timeLimitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeLimitButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeLimitButtonActionPerformed

    private void energyLimitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_energyLimitButtonActionPerformed
        controller.setPowerConstrain((double) energyLimit.getValue());
        
    }//GEN-LAST:event_energyLimitButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        exit();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void switchButtonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchButtonMenuActionPerformed
        controller.switchCurrentStatus();
        if (controller.getCurrentStatus()) {
            switchButton.setText("READ ON");
        } else {
            switchButton.setText("READ OFF");
        }
    }//GEN-LAST:event_switchButtonMenuActionPerformed

    private void buzzerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buzzerButtonActionPerformed
        controller.switchBuzzerStatus();
        if (controller.getBuzzerStatus()) {
            buzzerButton.setText("BUZZER ON");
        } else {
            buzzerButton.setText("BUZZER OFF");
        }
    }//GEN-LAST:event_buzzerButtonActionPerformed

    private void exit() {
        System.exit(0);
    }
    
    public Controller getController() {
        return controller;
    }
    
    public JPanel getChartPanel() {
        return chartPanel;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        Dashboard main = new Dashboard();
        java.awt.EventQueue.invokeLater(() -> {
            main.setVisible(true);
        });
        Thread t=new Thread() {
            @Override
            public void run() {
                while (true) {
                    main.getController().generateChart();
                }
            }
        };
        t.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu actionMenu;
    private javax.swing.JButton buzzerButton;
    private javax.swing.JPanel chartPanel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JSpinner energyLimit;
    private javax.swing.JButton energyLimitButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JMenuItem exitButtonMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JButton switchButton;
    private javax.swing.JMenuItem switchButtonMenu;
    private javax.swing.JSpinner timeLimit;
    private javax.swing.JButton timeLimitButton;
    // End of variables declaration//GEN-END:variables
}
